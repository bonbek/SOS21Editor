<?xml version="1.0" encoding="UTF-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
	paddingTop="20" paddingLeft="20" paddingBottom="20" paddingRight="20"
	title="Editer les variables joueur"
	addedToStage="onAdded();"
	showCloseButton="true" close="PopUpManager.removePopUp(this)">

	<!-- Copyright 2010 toffer. -->
	
	<mx:Script>
	    <![CDATA[
		
		import mx.managers.PopUpManager;
		import mx.collections.ArrayCollection;
		
		/**
		 *	Editeur variables d'environnement
		 *
		 *	@langversion ActionScript 3.0
		 *	@playerversion Flash 9.0
		 *
		 *	@author Christopher Corbin
		 *	@since  2010-12-17
		 */
		
		private var edited:Array = [];
		
		//---------------------------------------
		// GETTER / SETTERS
		//---------------------------------------
		
		public var gateway:Object;
		public var playerProxy:Object;
				
		// liste des variables globales
		[Bindable]
		public var globals:ArrayCollection = new ArrayCollection();

		// liste des variables locales
		[Bindable]
		public var locals:ArrayCollection = new ArrayCollection();

		private function get envEditor () : EnvEditor
		{ return parentApplication.envEditor; }

		/**
		 * Retoune une globale
		 *	@param id int
		 *	@return Object
		 */
		public function getGlobal (id:int) : Object
		{
			var global:Object;
			for each (var o:Object in globals)
			{
				if (o.id == id)
				{
					global = o;
					break;
				}
			}
			
			return global;
		}
		
		public function getLocal (id:int) : Object
		{
			loadLocals();
			return locals.source[id];
		}
		
		public function get editGlobals () : Boolean
		{ return tn.selectedIndex == 0; }
		
		//---------------------------------------
		// EVENT HANDLERS
		//---------------------------------------
		
		private function onItemEdit (event:Event) : void
		{
			var item:Object;
			if (editGlobals)
				item = dgGlobals.selectedItem;
			
			if (edited.indexOf(item) == -1) edited.push(item);
		}
		
		private function createNew () : void
		{
			/*if (editGlobals)
			{
				_gateway.call("sos21Services.Globals", new Responder(onNewResult, onFault), "new");
			}
			else
			{
				var no:Object = {id:locals.length, name:"NOUV VAR", value:"0"};
				locals.addItem(no);
				datamapProxy.env.push(no);

				_gateway.call(	"sos21Services.updateDataMap", new Responder(onSaveResult, onFault),
								datamapProxy.getData().id, "env", datamapProxy.env);
			}*/
		}
		
		/**
		 * Réception liste des globales
		 *	@param result Array
		 */
		private function onGlobalsResult (result:Array) : void
		{ globals.source = result; }
		
		private function onNewResult (result:Object) : void
		{ 
			if (editGlobals) globals.addItem(result);
		}
		
		private function onFault (fault:Object) : void
		{ trace(this, "fault", fault); }
		
		/**
		 * Réception liste des globales
		 *	@param result Array
		 */
		private function onSaveResult (result:Object) : void
		{ trace(this, "saved"); }
		
		private function tabChange () : void
		{
			edited = [];

			if (editGlobals) loadGlobals();
			else
			loadLocals();
		}
		
		private function onAdded () : void
		{
			// TODO
			loadGlobals();
		}
		
		//---------------------------------------
		// PRIVATE METHODS
		//---------------------------------------
		
		/**
		 *	@private
		 */
		private function loadGlobals () : void
		{
			var env:EnvEditor = envEditor;
			var gbls:Object = playerProxy.getData().globals;
			for (var p:Object in gbls)
				trace(">", p, gbls[p]);
		}
		
		/**
		 *	@private
		 */
		private function loadLocals () : void
		{
			/*var env:Array = [];
			for each (var o:Object in datamapProxy.env)
				env.push({id:o.id, name:o.name, value:o.value});

			locals.source = env;*/
		}
		
		/**
		 *	@private
		 * Sauvegarde le domaine variables affichées
		 */
		private function save () : void
		{
			/*if (edited.length > 0)
			
			if (editGlobals)
			{				
				_gateway.call(	"sos21Services.Globals", new Responder(onSaveResult, onFault),
								"update", edited);
			}
			else
			{
				var env:Array = [];
				var no:Object;
				for each (var o:Object in locals)
				{
					env.push({id:o.id, name:o.name, value:o.value});
				}
					
				datamapProxy.getData().env = env;
				_gateway.call(	"sos21Services.updateDataMap", new Responder(onSaveResult, onFault),
								datamapProxy.getData().id, "env", env);
			}*/
		
		}
		
	    ]]>
	</mx:Script>
	
	<mx:TabNavigator id="tn" width="100%" height="100%" change="tabChange()">
		<mx:Box label="Jeu">
			<mx:DataGrid id="dgGlobals" dataProvider="{globals}" rowCount="15" editable="true" itemEditEnd="onItemEdit(event);">
				<mx:columns>
					<mx:DataGridColumn width="40" dataField="id" headerText="id" editable="false" />
					<mx:DataGridColumn width="240" dataField="name" headerText="nom" />
					<mx:DataGridColumn width="100" dataField="value" headerText="valeur" />
				</mx:columns>
			</mx:DataGrid>
		</mx:Box>
		<mx:Box label="Scène">
			<mx:DataGrid dataProvider="{locals}" rowCount="15" editable="true" itemEditEnd="onItemEdit(event);">
				<mx:columns>
					<mx:DataGridColumn width="40" dataField="id" headerText="id" editable="false" />
					<mx:DataGridColumn width="240" dataField="name" headerText="nom" />
					<mx:DataGridColumn width="100" dataField="value" headerText="valeur" />
				</mx:columns>
			</mx:DataGrid>
		</mx:Box>
	</mx:TabNavigator>
	<mx:HBox width="100%">
		<mx:Button id="btNew" label="nouveau" click="createNew()" />
		<mx:Spacer width="100%" />
		<mx:Button id="btSave" label="sauvegarder" click="save()" />
	</mx:HBox>
</mx:TitleWindow>